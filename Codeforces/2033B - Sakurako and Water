#include <bits/stdc++.h>
using namespace std;
//track diagnols using i-j.
//the same diagonal will have the same i-j
//You only need to track the left to right diagonal since that is the only one Sakurako can influence in the problem statement.
/*
[
[0,0][0,1][0,2],
[1,0][1,1][1,2],
[2,0][2,1][2,2],
If you do i-j on this you can see
[
0,-1,-2,
1,0,-1,
2,1,0
]
]
*/
 
int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	int tc;
	cin>>tc;
	while(tc--){
		int n = 0;
		cin>>n;;
		map<int,int>m;
		for(int i = 0; i<n; i++){
			for(int j = 0; j<n; j++){
				int temp = 0;
				cin>>temp;
				if(temp>0) continue;
				if(m.find(i-j)!=m.end()){
					m[i-j] = min(temp,m[i-j]);
				}else{
					m[i-j] = temp;
				}
			}
			
		}
		int res = 0;
		for(auto it : m) res+= abs(it.second);
		cout<<res<<endl;
	}
	return 0;
}
