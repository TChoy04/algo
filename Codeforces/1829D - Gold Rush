//Solve recursively. If it is not divisible by 3, the split is not possible. If the target is larger than n it is not possible as the number cannot increase only decrease.
#include <bits/stdc++.h>
using namespace std;
 
void setIO(string s) {
	freopen((s + ".in").c_str(), "r", stdin);
	freopen((s + ".out").c_str(), "w", stdout);
}
/*
9
3,6
3,2,4
27/3 
9 18
*/
//
bool helper(int n, int m){
	if(n==m) return true;
	if(n==0 || n%3!=0 || m>n) return false;
	return helper(n/3,m) || helper(2*n/3,m);
}
int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	int tc;
	cin>>tc;
	while(tc--){
		int n,m;
		cin>>n>>m;
		if(m>n) cout<<"NO\n";
		else{
			if(helper(n,m)) cout<<"YES\n";
			else cout<<"NO\n";
		}
	}
	return 0;
}

