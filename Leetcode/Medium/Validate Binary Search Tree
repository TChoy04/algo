//Time Complexity: O(N)
//Space Complexity: O(N)

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 
class Solution {
public:
    //Global variable to keep track of previous element
    TreeNode* prev = NULL;
    //helper function
    bool helper(TreeNode* root){
        //
        if(!root) return true;   
        if(!helper(root->left)) return false;
        if(prev!=NULL && prev->val>=root->val) return false;
        prev = root;
        return helper(root->right);
        
    }
    bool isValidBST(TreeNode* root) {
        return helper(root);
    }
};
