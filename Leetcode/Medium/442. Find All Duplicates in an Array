Time Complexity: O(N)
Space Complexity: O(1)
//Negate the value at the index of the current value -1. This is possible due to the constraint 1 <= nums[i] <= n, so we know that all the values -1 will be valid
//indexes. If it is positive, then that means it has been negated twice which means it is a value that has appeared twice.
//Example:
// [2,3,1,3]
// [2,-3,1,3]
// [2,-3,-1,3]
// [-2,-3,-1,3]
// [-2,-3,1,3]
// Index 2 has been negated twice and become positive, thus is part of the result. 
class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        vector<int>res;
        for(int x = 0; x<nums.size(); x++){
            int index = abs(nums[x])-1;
            nums[index]*=-1;
            if(nums[index]>0) res.push_back(index+1);
        }
        return res;
    }
};
