Time Complexity: O(N)
Space Complexity: O(N)
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    //Helper function
    void helper(TreeNode* root, int depth, int& res){
        //If root is null, return
        if(!root) return;
        //Recurse left and right
        helper(root->left,depth+1,res);
        helper(root->right,depth+1,res);
        //Set result to deepest depth
        res = max(res,depth);
    }
    int maxDepth(TreeNode* root) {
        int res = 0;
        //Call helper function
        helper(root,1,res);
        //Return result
        return res;
    }
};
