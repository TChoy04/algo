/*
Time Complexity: O(N)
Space Complexity: O(N)
Dynamic programming solution similar to fibonacci. Preload the values of the first 3 triboonacci numbers and calculate the next ones off that.
*/

class Solution {
public:
    int tribonacci(int n) {
        if(n<=1) return n;
        if(n==2) return 1;
        int arr[n+1];
        arr[0] = 0;
        arr[1] = 1;
        arr[2] = 1;
        for(int x = 3; x<=n; x++){
            arr[x] = arr[x-3] + arr[x-2] + arr[x-1];
        }
        return arr[n];
    }
};
