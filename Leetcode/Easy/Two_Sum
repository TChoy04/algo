#Hashmap Solution
Time Complexity: O(N)
Space Complexity: O(N)

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
     unordered_map<int,int>cache;
     for(int x = 0; x<nums.size(); x++){
         int diff = target-nums[x];
         if(cache.find(diff)!=cache.end()) return {cache[diff],x};
         cache[nums[x]] = x;
     }
        return {};
    }
};

Could create a vector with a pair inside then sort, but this would result in a greater time complexity than the hashmap solution, rendering it obsolete. 
